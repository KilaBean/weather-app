plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'com.example.weather'
    compileSdk 35

    // Add keystore properties loading
    def keystoreProperties = new Properties()
    def keystorePropertiesFile = rootProject.file('keystore.properties')
    if (keystorePropertiesFile.exists()) {
        keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
    }

    defaultConfig {
        applicationId "com.example.weather"
        minSdk 24
        targetSdk 35
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    // Add signing configuration
    signingConfigs {
        release {
            if (keystorePropertiesFile.exists()) {
                def storeFilePath = keystoreProperties['storeFile']
                // Check if it's a relative path and convert to absolute if needed
                if (!storeFilePath.startsWith("/") && !storeFilePath.contains(":")) {
                    storeFilePath = file(storeFilePath).absolutePath
                }
                storeFile file(storeFilePath)
                storePassword keystoreProperties['storePassword']
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
            }
        }
    }

    // Fix nested resources warning
    sourceSets {
        main {
            res.srcDirs = ['src/main/res']
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile(
                    'proguard-android-optimize.txt'
            ), 'proguard-rules.pro'
            // Apply signing configuration only if keystore exists
            if (keystorePropertiesFile.exists()) {
                signingConfig signingConfigs.release
            }
        }
        debug {
            signingConfig signingConfigs.debug
        }
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        // The version 1.5.3 is compatible with the Kotlin version in your project
        kotlinCompilerExtensionVersion = '1.5.3'
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    def compose_bom = platform('androidx.compose:compose-bom:2024.02.00')
    implementation compose_bom

    // Core AndroidX libraries
    implementation "androidx.core:core-ktx:1.12.0"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.6.2"
    implementation "androidx.activity:activity-compose:1.8.2"

    // Add this dependency to fix the LocalLifecycleOwner deprecation warning
    implementation "androidx.lifecycle:lifecycle-runtime-compose:2.7.0"

    // CRITICAL FIX: Update Fragment library to resolve registerForActivityResult errors
    implementation "androidx.fragment:fragment-ktx:1.6.2"

    // Compose libraries (using BOM for version alignment)
    implementation "androidx.compose.ui:ui"
    implementation "androidx.compose.ui:ui-tooling-preview"
    implementation "androidx.compose.material3:material3:1.3.2"

    // ViewModel & Compose Integration
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.6.2"

    // Location
    implementation "com.google.android.gms:play-services-location:21.0.1"

    // Retrofit + Gson
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"

    // Image loading
    implementation "io.coil-kt:coil-compose:2.5.0"

    // Compose runtime and foundation
    implementation "androidx.compose.runtime:runtime"
    implementation "androidx.compose.foundation:foundation"
    implementation "androidx.compose.animation:animation-core"
    implementation "androidx.compose.material:material-icons-extended"

    // Compose Debug Tooling
    debugImplementation "androidx.compose.ui:ui-tooling"
    debugImplementation "androidx.compose.ui:ui-test-manifest"

    // Testing
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation "androidx.test.ext:junit:1.1.5"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.5.1"

    // Fixed: Use BOM for Compose testing dependencies
    androidTestImplementation compose_bom
    androidTestImplementation "androidx.compose.ui:ui-test-junit4"
    androidTestImplementation "androidx.compose.ui:ui-test-manifest"

    // Force compatible Kotlin standard library version
    implementation(platform("org.jetbrains.kotlin:kotlin-bom:1.9.10"))

    // REMOVED: This dependency is no longer needed after migrating to Material3 PullToRefreshBox
    // implementation "com.google.accompanist:accompanist-swiperefresh:0.32.0"
}